	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_optix_UpdateWindow_default
_optix_UpdateWindow_default:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, -720868
	ld.sis	bc, 1
	ld	a, (iy + 10)
	ld	e, 1
	xor	a, e
	bit	0, a
	jq	nz, BB0_3
	ld	hl, (iy + 18)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, _optix_UpdateStack
	pop	hl
	ld	iy, (ix + 6)
	ld	e, 1
	ld.sis	bc, 1
	ld	hl, -720868
BB0_3:
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	call	__sand
	ld	a, l
	xor	a, e
	xor	a, e
	bit	0, a
	jq	nz, BB0_5
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	5, a
	jq	z, BB0_6
BB0_5:
	ld	hl, _optix_cursor
	push	iy
	push	hl
	call	_optix_CheckTransformOverlap
	pop	hl
	pop	hl
	and	a, 1
	ld	iy, (ix + 6)
	ld	(iy + 10), a
BB0_6:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderWindow_default
_optix_RenderWindow_default:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld.sis	bc, 2
	ld	l, (iy + 1)
	ld	h, (iy + 2)
	dec.sis	hl
	ld	(ix + -6), hl
	ld	e, (iy + 4)
	dec	e
	ld	l, (iy + 7)
	ld	h, (iy + 8)
	add.sis	hl, bc
	ld	a, (iy + 9)
	add	a, 2
	ld	c, a
	ld	(ix + -3), bc
	ld	a, (_optix_colors+1)
	ld	c, a
	ld	a, (_optix_colors+4)
	ld	iyl, a
	push	iy
	push	bc
	ld	bc, (ix + -3)
	push	bc
	push	hl
	ld	l, e
	push	hl
	ld	hl, (ix + -6)
	push	hl
	call	_optix_OutlinedRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 18)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, _optix_RenderStack
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_UpdateWindowTitleBar_default
_optix_UpdateWindowTitleBar_default:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, -720868
	ld.sis	bc, 1
	ld	iy, (iy + 21)
	ld	a, (iy + 10)
	ld	(ix + -3), a
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	call	__sand
	ld	e, 1
	ld	a, l
	xor	a, e
	xor	a, e
	bit	0, a
	jq	nz, BB2_2
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	5, a
	jq	z, BB2_20
BB2_2:
	ld	hl, _optix_cursor
	ld	de, (ix + 6)
	push	de
	push	hl
	call	_optix_CheckTransformOverlap
	ld	c, 1
	pop	hl
	pop	hl
	xor	a, c
	bit	0, a
	jq	nz, BB2_20
	ld	de, 1
	ld	a, (ix + -3)
	xor	a, c
	bit	0, a
	jq	z, BB2_5
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	iy, (iy + 21)
	ld	(iy + 10), 1
	ld	(_optix_cursor+27), de
	jq	BB2_20
BB2_5:
	ld	bc, (_optix_cursor+21)
	ld	de, (_optix_cursor+1)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_8
	ld	hl, (_optix_cursor+24)
	push	bc
	pop	iy
	ld	bc, (_optix_cursor+4)
	ld	(ix + -3), hl
	ld	(ix + -9), bc
	or	a, a
	sbc	hl, bc
	lea	bc, iy + 0
	jq	nz, BB2_9
	ld	iy, (ix + 6)
	ld	iy, (iy + 21)
	ld	(iy + 10), 1
	jq	BB2_18
BB2_8:
	ld	hl, (_optix_cursor+4)
	ld	(ix + -9), hl
	ld	hl, (_optix_cursor+24)
	ld	(ix + -3), hl
BB2_9:
	ld	iy, (ix + 6)
	ld	iy, (iy + 1)
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	add	iy, de
	ld	(ix + -6), iy
	ld	iy, (ix + 6)
	ld	de, (iy + 4)
	ld	hl, (ix + -9)
	ld	bc, (ix + -3)
	or	a, a
	sbc	hl, bc
	add	hl, de
	ex	de, hl
	ld	bc, 2
	ld	hl, (ix + -6)
	push	bc
	pop	iy
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB2_11
	ld	hl, 1
	ld	(ix + -6), hl
BB2_11:
	ld	(ix + -9), de
	ex	de, hl
	lea	de, iy + 0
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB2_13
	ld	hl, 1
	ld	(ix + -9), hl
BB2_13:
	ld	iy, (ix + 6)
	ld	iy, (iy + 21)
	ld	(ix + -12), iy
	ld	l, (iy + 7)
	ld	h, (iy + 8)
	ld	bc, 0
	ld	c, l
	ld	b, h
	ld	de, (ix + -6)
	push	de
	pop	iy
	add	iy, bc
	ld	hl, 319
	or	a, a
	sbc	hl, bc
	ld	(ix + -3), hl
	ld	bc, 320
	lea	hl, iy + 0
	or	a, a
	sbc	hl, bc
	jq	nc, BB2_15
	ld	(ix + -3), de
BB2_15:
	ld	iy, (ix + -12)
	ld	a, (iy + 9)
	ld	de, 0
	ld	e, a
	ld	iy, (ix + -9)
	add	iy, de
	ld	hl, 239
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	ld	de, 240
	lea	hl, iy + 0
	or	a, a
	sbc	hl, de
	jq	nc, BB2_17
	ld	bc, (ix + -9)
BB2_17:
	ld	(ix + -6), bc
	push	bc
	ld	hl, (ix + -3)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_optix_SetPosition
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	bc, (iy + 21)
	ld	de, 0
	ld	e, (iy + 9)
	ld	hl, (ix + -6)
	add	hl, de
	push	hl
	ld	hl, (ix + -3)
	push	hl
	push	bc
	call	_optix_SetPosition
	pop	hl
	pop	hl
	pop	hl
BB2_18:
	ld	hl, 2
	ld	(_optix_cursor+27), hl
BB2_20:
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	iy, (iy + 21)
	ld	hl, (iy + 15)
	push	iy
	call	__indcallhl
	pop	hl
	ld	iy, (ix + 6)
	ld	iy, (iy + 21)
	ld	a, (iy + 10)
	ld	iy, (ix + 6)
	ld	(iy + 10), a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderWindowTitleBar_default
_optix_RenderWindowTitleBar_default:
	ld	hl, -3
	call	__frameset
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	iy, (iy + 21)
	ld	a, (iy + 10)
	ld	l, 1
	xor	a, l
	ld	(ix + -3), a
	push	de
	pop	iy
	ld	e, (iy + 1)
	ld	d, (iy + 2)
	dec.sis	de
	ld	a, (iy + 4)
	ld	(ix + -1), a
	ld	l, (iy + 7)
	ld	h, (iy + 8)
	ld.sis	bc, 2
	add.sis	hl, bc
	ld	a, (iy + 9)
	ld	(ix + -2), a
	ld	a, (_optix_colors+2)
	ld	iyl, a
	ld	a, (_optix_colors+3)
	bit	0, (ix + -3)
	jq	nz, BB3_2
	ld	iyl, a
BB3_2:
	ld	a, (_optix_colors+4)
	ld	c, a
	push	bc
	push	iy
	ld	a, (ix + -2)
	ld	c, a
	push	bc
	push	hl
	ld	a, (ix + -1)
	ld	l, a
	push	hl
	push	de
	call	_optix_OutlinedRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 18)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, _optix_RenderStack
	pop	hl
	ld	iy, (ix + 6)
	ld	iy, (iy + 21)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_6
	ld	hl, (iy + 12)
	push	iy
	call	__indcallhl
	pop	hl
BB3_6:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__setflag
	extern	_optix_CheckTransformOverlap
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	_optix_RenderStack
	extern	__indcallhl
	extern	_optix_cursor
	extern	_optix_colors
	extern	_optix_UpdateStack
	extern	_optix_SetPosition
	extern	__sand
	extern	__frameset0
	extern	_optix_OutlinedRectangle

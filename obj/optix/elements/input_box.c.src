	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_optix_UpdateInputBox_default
_optix_UpdateInputBox_default:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 6)
	ld	iy, (iy + 27)
	ld	hl, (iy + 29)
	ld	(ix + -3), hl
	push	hl
	call	_strlen
	ld	(ix + -6), hl
	pop	hl
	ld	iy, (_current_context)
	ld	hl, (iy + 9)
	ld	de, (ix + 6)
	push	de
	push	hl
	call	_optix_CheckTransformOverlap
	pop	hl
	pop	hl
	ld	d, 1
	xor	a, d
	bit	0, a
	jq	nz, BB0_4
	ld	hl, 5
	ld	iy, (_current_context)
	ld	iy, (iy + 9)
	ld	(iy + 33), hl
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 1
	call	__sand
	ld	a, l
	xor	a, d
	xor	a, d
	bit	0, a
	ld	iy, (ix + 6)
	jq	nz, BB0_3
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	5, a
	jq	z, BB0_7
BB0_3:
	ld	(iy + 14), 1
	jq	BB0_7
BB0_4:
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 1
	call	__sand
	ld	a, l
	xor	a, d
	xor	a, d
	bit	0, a
	ld	iy, (ix + 6)
	jq	nz, BB0_6
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	5, a
	jq	z, BB0_7
BB0_6:
	ld	(iy + 14), 0
BB0_7:
	ld	a, (iy + 14)
	xor	a, d
	bit	0, a
	jq	nz, BB0_32
	ld	bc, 6
	ld	e, (iy + 33)
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	(ix + -9), hl
	add	hl, bc
	ld	iy, (_current_context)
	lea	bc, iy + 0
	ld	iy, (iy + 9)
	ld	(iy + 33), hl
	ld	hl, (ix + -3)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_32
	push	bc
	pop	iy
	ld	iy, (iy + 3)
	ld	l, (iy + 4)
	ld	iy, (ix + 6)
	ld	a, l
	or	a, a
	jq	z, BB0_32
	ld	a, l
	cp	a, 10
	jq	nz, BB0_14
	ld	de, (iy + 30)
	push	de
	pop	hl
	ld	bc, (ix + -6)
	or	a, a
	sbc	hl, bc
	jq	nc, BB0_31
	inc	de
	jq	BB0_13
BB0_14:
	ld	a, l
	cp	a, 11
	jq	nz, BB0_17
	ld	de, (iy + 30)
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB0_31
	dec	de
BB0_13:
	ld	(iy + 30), de
	jq	BB0_31
BB0_17:
	ld	a, l
	cp	a, 15
	jq	nz, BB0_19
	or	a, a
	sbc	hl, hl
	ld	(iy + 30), hl
	ld	hl, (ix + -3)
	ld	(hl), 0
	jq	BB0_31
BB0_19:
	ld	a, l
	cp	a, 48
	jq	nz, BB0_23
	ld	l, e
	inc	l
	ld	a, e
	cp	a, 2
	jq	c, BB0_22
	ld	l, 0
BB0_22:
	ld	(iy + 33), l
	jq	BB0_31
BB0_23:
	ld	bc, (ix + -6)
	inc	bc
	ld	(ix + -6), bc
	ld	a, l
	cp	a, 56
	jq	nz, BB0_26
	ld	de, (iy + 30)
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB0_31
	ld	iy, (ix + -3)
	add	iy, de
	lea	hl, iy + 0
	dec	hl
	push	hl
	pop	bc
	ld	hl, (ix + -6)
	or	a, a
	sbc	hl, de
	push	hl
	push	iy
	push	bc
	call	_memmove
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (iy + 30)
	dec	hl
	jq	BB0_30
BB0_26:
	ld	bc, 0
	ld	c, l
	ld	(ix + -12), bc
	ld	bc, 3
	ld	hl, (ix + -9)
	call	__imulu
	push	hl
	pop	bc
	ld	hl, L___const.optix_UpdateInputBox_default.keys
	add	hl, bc
	ld	hl, (hl)
	ld	bc, (ix + -12)
	add	hl, bc
	ld	a, (hl)
	or	a, a
	jq	z, BB0_31
	ld	a, (iy + 34)
	xor	a, d
	bit	0, a
	jq	nz, BB0_29
	ld	de, (iy + 35)
	ld	hl, (ix + -6)
	or	a, a
	sbc	hl, de
	jq	nc, BB0_31
BB0_29:
	ld	de, (iy + 30)
	ld	iy, (ix + -3)
	add	iy, de
	lea	hl, iy + 0
	inc	hl
	push	hl
	pop	bc
	ld	hl, (ix + -6)
	or	a, a
	sbc	hl, de
	push	hl
	push	iy
	push	bc
	call	_memmove
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	a, (iy + 33)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, L___const.optix_UpdateInputBox_default.keys
	add	hl, de
	ld	hl, (hl)
	ld	iy, (_current_context)
	ld	iy, (iy + 3)
	ld	a, (iy + 4)
	ld	iy, (ix + 6)
	ld	de, 0
	ld	e, a
	add	hl, de
	ld	a, (hl)
	ld	de, (iy + 30)
	ld	hl, (ix + -3)
	add	hl, de
	ld	(hl), a
	ld	hl, (iy + 30)
	inc	hl
BB0_30:
	ld	(iy + 30), hl
BB0_31:
	ld	iy, (ix + 6)
	ld	iy, (iy + 27)
	ld	(iy + 41), 1
	ld	hl, (ix + 6)
	push	hl
	call	_optix_RecursiveAlign
	pop	hl
	ld	iy, (ix + 6)
	ld	(iy + 17), 1
	ld	hl, (iy + 27)
	lea	de, iy + 0
	push	hl
	pop	bc
	push	bc
	pop	iy
	ld	(iy + 17), 1
	push	de
	pop	iy
	ld	hl, (iy + 21)
	push	bc
	call	__indcallhl
	pop	hl
BB0_32:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderInputBox_default
_optix_RenderInputBox_default:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld	a, (iy + 15)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB1_8
	ld	a, (iy + 17)
	xor	a, l
	bit	0, a
	jq	nz, BB1_8
	ld	iy, (ix + 6)
	ld	l, (iy + 1)
	ld	h, (iy + 2)
	ld	(ix + -3), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 4)
	ld	iy, (ix + 6)
	ld	e, (iy + 7)
	ld	d, (iy + 8)
	ld	iy, (ix + 6)
	ld	c, (iy + 9)
	ld	hl, 5
	push	hl
	inc	hl
	push	hl
	ld	hl, 12
	push	hl
	ld	l, c
	push	hl
	push	de
	ld	l, a
	push	hl
	ld	hl, (ix + -3)
	push	hl
	call	_optix_OutlinedRectangle_WithBevel
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	ld	hl, 17
	push	hl
	ld	hl, -1
	push	hl
	call	_optix_SetTextColor
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
	ld	hl, (iy + 27)
	ld	(ix + -3), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB1_6
	lea	de, iy + 0
	ld	iy, (ix + -3)
	ld	hl, (iy + 18)
	push	de
	pop	iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB1_6
	ld	de, (ix + -3)
	push	de
	call	__indcallhl
	ld	iy, (ix + 6)
	pop	hl
	ld	a, (iy + 14)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB1_6
	ld	hl, 16
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	iy, (ix + -3)
	ld	hl, (iy + 1)
	ld	(ix + -6), hl
	ld	hl, (iy + 29)
	ld	iy, (ix + 6)
	ld	de, (iy + 30)
	push	de
	push	hl
	call	_optix_GetStringWidthL
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	hl, (ix + -6)
	dec	hl
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix + -3)
	ld	hl, (iy + 4)
	ld	de, 10
	push	de
	push	hl
	push	bc
	call	_gfx_VertLine
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
	pop	hl
BB1_6:
	ld	hl, (iy + 24)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, _optix_RenderStack
	pop	hl
BB1_8:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_GetStringIndexByOffset
_optix_GetStringIndexByOffset:
	ld	hl, -9
	call	__frameset
	ld	hl, (ix + 6)
	push	hl
	call	_strlen
	ld	de, 0
	push	hl
	pop	bc
	pop	hl
BB2_1:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB2_12
	ld	(ix + -9), bc
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	bc, 2
	call	__idivs
	ld	(ix + -6), de
	add	hl, de
	ld	(ix + -3), hl
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_optix_GetStringWidthL
	pop	de
	pop	de
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	de, 3
	or	a, a
	sbc	hl, de
	jq	c, BB2_13
	ld	hl, (ix + -3)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_optix_GetStringWidthL
	pop	de
	pop	de
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	ld	a, 1
	ld	l, 0
	jq	c, BB2_5
	ld	a, l
BB2_5:
	bit	0, a
	ld	de, (ix + -6)
	ld	bc, (ix + -9)
	jq	nz, BB2_6
	ld	iy, (ix + -3)
	jq	BB2_8
BB2_6:
	ld	iy, (ix + -3)
	lea	hl, iy + 0
	inc	hl
	ex	de, hl
BB2_8:
	bit	0, a
	jq	nz, BB2_10
	dec	iy
	lea	bc, iy + 0
BB2_10:
	jq	BB2_1
BB2_12:
	ld	hl, -1
	jq	BB2_11
BB2_13:
	ld	hl, (ix + -3)
BB2_11:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"",000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,"WRMH",000o,000o,"?",000o,"VQLG",000o,000o,".ZUPKFC",000o," YTOJEB",000o,000o,"XSNIDA",000o,000o,000o,000o,000o,000o,000o,000o,000o,000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"",000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,"wrmh",000o,000o,"?",000o,"vqlg",000o,000o,".zupkfc",000o," ytojeb",000o,000o,"xsnida",000o,000o,000o,000o,000o,000o,000o,000o,000o,000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"",000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,"-369)",000o,000o,000o,".258(",000o,000o,000o,"0147,",000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,000o

	section	.rodata,"a",@progbits
	private	L___const.optix_UpdateInputBox_default.keys
L___const.optix_UpdateInputBox_default.keys:
	dl	L_.str
	dl	L_.str.1
	dl	L_.str.2

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_optix_CheckTransformOverlap
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	__indcallhl
	extern	_memmove
	extern	_optix_OutlinedRectangle_WithBevel
	extern	__sand
	extern	_optix_RecursiveAlign
	extern	_strlen
	extern	__idivs
	extern	__setflag
	extern	_current_context
	extern	_gfx_VertLine
	extern	__Unwind_SjLj_Unregister
	extern	_optix_GetStringWidthL
	extern	__ixor
	extern	_optix_RenderStack
	extern	__imulu
	extern	_gfx_SetColor
	extern	_optix_SetTextColor

	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_optix_UpdateGUI
_optix_UpdateGUI:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix + -3), hl
	call	_kb_Scan
	ld	hl, (_optix_cursor+15)
	ld	de, 0
	push	de
	call	__indcallhl
	pop	hl
	ld	hl, (ix + -3)
	ld	(ix + 6), hl
	pop	hl
	pop	ix
	jp	_optix_UpdateStack_TopLevel
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_UpdateStack_TopLevel
_optix_UpdateStack_TopLevel:
	ld	hl, -21
	call	__frameset
	ld	hl, (ix + 6)
	xor	a, a
	ld	de, 0
	ld	(ix + -6), de
	ld	iy, (hl)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB1_17
	ld	(ix + -15), a
	ld	hl, 0
	ld	(ix + -18), hl
	ld	(ix + -3), hl
	ld	(ix + -12), hl
	push	hl
	pop	bc
BB1_2:
	ld	hl, (iy + 15)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB1_3
	jq	BB1_4
BB1_3:
	push	iy
	ld	(ix + -9), bc
	call	__indcallhl
	ld	bc, (ix + -9)
	pop	hl
	ld	de, (ix + -3)
	ld	hl, (ix + 6)
	add	hl, de
	ld	iy, (hl)
BB1_4:
	ld	a, (iy + 10)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB1_5
	jq	BB1_7
BB1_5:
	ld	a, (iy)
	and	a, -2
	cp	a, 4
	jq	nz, BB1_7
	ld	(ix + -18), iy
	ld	(ix + -12), bc
	ld	a, 1
	ld	(ix + -15), a
BB1_7:
	inc	bc
	ld	hl, (ix + -3)
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	iy, (iy + 3)
	ld	de, 3
	add	hl, de
	ex	de, hl
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix + -3), de
	jq	nz, BB1_2
	ld	(ix + -3), de
	ld	a, (ix + -15)
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB1_17
	ld	(ix + -9), bc
	dec	bc
	ld	(ix + -15), bc
	ld	iy, (ix + 6)
BB1_11:
	ld	hl, (iy)
	push	hl
	pop	de
	ld	a, (hl)
	and	a, -2
	cp	a, 4
	jq	nz, BB1_15
	ld	(ix + -21), iy
	ld	hl, (ix + -12)
	ld	bc, (ix + -6)
	or	a, a
	sbc	hl, bc
	ld	a, 1
	jq	z, BB1_14
	ld	a, 0
BB1_14:
	and	a, 1
	push	de
	pop	iy
	ld	(iy + 10), a
	ld	iy, (ix + -21)
BB1_15:
	ld	bc, (ix + -6)
	inc	bc
	lea	iy, iy + 3
	ld	hl, (ix + -9)
	ld	(ix + -6), bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB1_11
	ld	hl, (ix + -15)
	ld	de, (ix + -12)
	or	a, a
	sbc	hl, de
	jq	z, BB1_17
	ld	hl, (ix + -12)
	push	hl
	pop	de
	inc	de
	ld	iy, 3
	lea	bc, iy + 0
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 6)
	add	hl, bc
	ld	(ix + -6), hl
	ex	de, hl
	lea	bc, iy + 0
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	hl, (ix + -12)
	ld	bc, -3
	call	__imulu
	ld	de, (ix + -3)
	add	hl, de
	push	hl
	push	iy
	ld	hl, (ix + -6)
	push	hl
	call	_memmove
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	de, (ix + -3)
	add	iy, de
	ld	hl, (ix + -18)
	ld	(iy + -3), hl
BB1_17:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_UpdateStack
_optix_UpdateStack:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	or	a, a
	sbc	hl, hl
	ld	(ix + -3), hl
	lea	de, iy + 0
	ld	iy, (iy)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_11
	ld	(ix + -6), de
BB2_2:
	ld	hl, (iy + 15)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_5
	push	iy
	call	__indcallhl
	pop	hl
	ld	hl, (ix + -6)
	ld	iy, (hl)
BB2_5:
	ld	de, (ix + -3)
	ld	a, (iy + 10)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB2_10
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_10
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	push	de
	pop	hl
BB2_9:
	ld	(ix + -3), iy
	ld	iy, (ix + -3)
	ld	iy, (iy)
	ld	(iy + 10), 0
	ld	iy, (ix + -3)
	dec	hl
	lea	iy, iy + 3
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_9
BB2_10:
	inc	de
	ld	(ix + -3), de
	ex	de, hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + 6)
	add	hl, de
	ld	(ix + -6), hl
	ld	iy, (hl)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_2
BB2_11:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderGUI
_optix_RenderGUI:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, 0
	push	hl
	pop	iy
	ld	hl, (hl)
	push	hl
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_5
	lea	hl, iy + 3
	ld	(ix + -3), hl
BB3_2:
	push	bc
	pop	iy
	ld	hl, (iy + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_4
	push	bc
	call	__indcallhl
	ld	de, 0
	pop	hl
BB3_4:
	ld	iy, (ix + -3)
	ld	hl, (iy)
	lea	iy, iy + 3
	ld	(ix + -3), iy
	push	hl
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB3_2
BB3_5:
	ld	hl, (_optix_cursor+12)
	ld	(ix + 6), de
	ld	sp, ix
	pop	ix
	jp	(hl)
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderStack
_optix_RenderStack:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (hl)
	push	hl
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB4_5
	lea	hl, iy + 3
	ld	(ix + -3), hl
BB4_2:
	push	bc
	pop	iy
	ld	hl, (iy + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB4_4
	push	bc
	call	__indcallhl
	pop	hl
BB4_4:
	ld	iy, (ix + -3)
	ld	hl, (iy)
	lea	iy, iy + 3
	ld	(ix + -3), iy
	push	hl
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB4_2
BB4_5:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__indcallhl
	extern	__imulu
	extern	_kb_Scan
	extern	_optix_cursor
	extern	_memmove

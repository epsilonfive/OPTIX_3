	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_optix_InitializeCursor
_optix_InitializeCursor:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, 0
	ld	de, 160
	ld	bc, 120
	ld	(iy + 24), hl
	ld	(iy + 1), de
	ld	(iy + 4), bc
	ld.sis	de, 1
	ld	(iy + 7), e
	ld	(iy + 8), d
	ld	(iy + 9), 1
	ld	de, _optix_UpdateCursor_default
	ld	(iy + 21), de
	ld	de, _optix_RenderCursor_default
	ld	(iy + 18), de
	ld	(iy + 15), 1
	ld	(iy + 39), hl
	ld	hl, 4
	ld	(iy + 36), hl
	ld	hl, _malloc
	push	hl
	ld	hl, 16
	push	hl
	push	hl
	call	_gfx_AllocSprite
	pop	de
	pop	de
	pop	de
	ld	iy, (ix + 6)
	ld	(iy + 42), hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_UpdateCursor_default
_optix_UpdateCursor_default:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, (iy + 1)
	ld	(iy + 27), bc
	ld	de, (iy + 4)
	ld	(iy + 30), de
	ld	iy, (_current_context)
	ld	hl, (iy)
	ld	a, (hl)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB1_5
	ld	iy, (iy + 3)
	ld	a, (iy + 3)
	xor	a, l
	bit	0, a
	jq	z, BB1_7
	call	_kb_AnyKey
	or	a, a
	jq	nz, BB1_4
	ld	iy, (_current_context)
	ld	iy, (iy + 3)
	ld	(iy + 3), 1
BB1_4:
	ld	iy, (ix + 6)
BB1_11:
	ld	hl, 4
	jq	BB1_36
BB1_5:
	ld	(ix + -3), bc
	ld	bc, -3
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	3, a
	jq	nz, BB1_12
	ld	hl, -720866
	push	de
	pop	iy
	jq	BB1_13
BB1_7:
	ld	e, l
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	3, a
	ld	iy, (ix + 6)
	jq	nz, BB1_32
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 1
	call	__sand
	ld	a, l
	xor	a, e
	bit	0, a
	jq	z, BB1_33
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	1, a
	jq	nz, BB1_34
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	2, a
	jq	z, BB1_11
	ld	hl, 3
	jq	BB1_36
BB1_12:
	ex	de, hl
	add	hl, bc
	ld	iy, (ix + 6)
	ld	(iy + 4), hl
	push	hl
	pop	iy
	ld	hl, -720866
BB1_13:
	ld.sis	bc, 1
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	call	__sand
	ld	a, l
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB1_16
	ld	(ix + -6), iy
	jq	BB1_17
BB1_16:
	ld	de, 3
	add	iy, de
	lea	hl, iy + 0
	ld	iy, (ix + 6)
	ld	(iy + 4), hl
	ld	(ix + -6), hl
BB1_17:
	ld	hl, -720866
	ld	de, -3
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	1, a
	jq	z, BB1_21
	ld	hl, (ix + -3)
	add	hl, de
	ld	(ix + -3), hl
	ld	iy, (ix + 6)
	ld	(iy + 1), hl
BB1_21:
	ld	hl, 320
	ld	iy, -720866
	ld	e, (iy)
	ld	d, (iy + 1)
	ld	a, e
	bit	2, a
	jq	nz, BB1_23
	ld	iy, (ix + 6)
	jq	BB1_24
BB1_23:
	ld	de, 3
	push	hl
	pop	bc
	ld	hl, (ix + -3)
	add	hl, de
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	(iy + 1), hl
	ld	(ix + -3), hl
	push	bc
	pop	hl
BB1_24:
	ld	c, (iy + 7)
	ld	b, (iy + 8)
	ld	de, 0
	ld	e, c
	ld	d, b
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	ld	de, (ix + -3)
	or	a, a
	sbc	hl, de
	call	__setflag
	ex	de, hl
	jq	p, BB1_26
	ld	(iy + 1), bc
	push	bc
	pop	hl
BB1_26:
	ld	(ix + -3), hl
	ld	a, (iy + 9)
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	e, a
	ld	hl, 240
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, (ix + -6)
	or	a, a
	sbc	hl, bc
	call	__setflag
	ld	bc, 0
	jq	p, BB1_28
	ld	(iy + 4), de
	ld	(ix + -6), de
BB1_28:
	ld	de, 0
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB1_30
	ld	(iy + 1), bc
BB1_30:
	ld	hl, (ix + -6)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB1_37
	ld	(iy + 4), bc
	jq	BB1_37
BB1_32:
	or	a, a
	sbc	hl, hl
	jq	BB1_36
BB1_33:
	ld	hl, 1
	jq	BB1_36
BB1_34:
	ld	hl, 2
BB1_36:
	ld	(iy + 36), hl
BB1_37:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderCursor_default
_optix_RenderCursor_default:
	ld	hl, -15
	call	__frameset
	ld	de, (ix + 6)
	ld	hl, (_current_context)
	ld	iy, (hl)
	ld	a, (iy)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB2_3
	push	de
	pop	iy
	ld	hl, (iy + 39)
	ld	(ix + -3), hl
	call	_gfx_GetDraw
	ld	l, a
	ld	(ix + -6), hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, 24
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	iy, (ix + 6)
	ld	iy, (iy + 39)
	ld	a, (iy)
	cp	a, 5
	jq	nz, BB2_6
	ld	hl, (iy + 27)
	ld	(ix + -15), hl
	ld	iy, (ix + -3)
	ld	hl, (iy + 1)
	ld	(ix + -9), hl
	ld	hl, (iy + 4)
	ld	(ix + -12), hl
	ld	e, (iy + 7)
	ld	d, (iy + 8)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, e
	ld	b, d
	ld	a, (iy + 9)
	push	hl
	pop	de
	ld	e, a
	ld	iy, (ix + -15)
	ld	a, (iy + 9)
	ld	l, a
	add	hl, de
	push	hl
	push	bc
	ld	hl, (ix + -12)
	push	hl
	jq	BB2_7
BB2_3:
	ld	a, (iy + 1)
	xor	a, l
	xor	a, l
	bit	0, a
	push	de
	call	z, _optix_RefreshCursorBackground
	pop	hl
	ld	hl, -1
	push	hl
	call	_gfx_SetTransparentColor
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 33)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, L___const.optix_RenderCursor_default.spr
	add	hl, de
	ld	hl, (hl)
	ld	de, (iy + 1)
	ld	a, (iy + 4)
	ld	c, a
	push	bc
	push	de
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	jq	BB2_9
BB2_6:
	ld	iy, (ix + -3)
	ld	hl, (iy + 1)
	ld	(ix + -9), hl
	ld	de, (iy + 4)
	ld	bc, 0
	push	bc
	pop	hl
	ld	l, (iy + 7)
	ld	h, (iy + 8)
	ld	a, (iy + 9)
	ld	c, a
	push	bc
	push	hl
	push	de
BB2_7:
	ld	hl, (ix + -9)
	push	hl
	call	_gfx_Rectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -6)
	push	hl
	call	_gfx_SetDraw
BB2_9:
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RefreshCursorBackground
_optix_RefreshCursorBackground:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, (iy + 42)
	ld	de, (iy + 1)
	ld	bc, (iy + 4)
	push	bc
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderCursorBackground
_optix_RenderCursorBackground:
	call	__frameset0
	ld	hl, (_current_context)
	ld	hl, (hl)
	ld	a, (hl)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB4_2
	ld	iy, (ix + 6)
	ld	hl, (iy + 42)
	ld	de, (iy + 27)
	ld	bc, (iy + 30)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	pop	hl
	pop	hl
	pop	hl
BB4_2:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_FindNearestElement
_optix_FindNearestElement:
	ld	hl, -29
	call	__frameset
	ld	a, (ix + 6)
	ld	iy, (ix + 9)
	ld	bc, 0
	cp	a, 4
	jq	z, BB5_46
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_46
	ld	hl, (ix + 12)
	push	hl
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_46
	ld	hl, 0
	ld	(ix + -3), hl
	ld	hl, (_current_context)
	ld	(ix + -9), hl
	lea	hl, iy + 4
	ld	(ix + -15), hl
	inc	iy
	ld	(ix + -18), iy
	push	de
	pop	iy
BB5_4:
	ld	de, (iy)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_45
	ld	(ix + -12), bc
	ld	(ix + -6), iy
	ld	iy, (ix + -9)
	ld	iy, (iy + 9)
	ld	bc, (iy + 39)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	push	de
	pop	iy
	jq	z, BB5_7
	ld	a, (iy + 16)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB5_8
BB5_7:
	ld	iy, (ix + -6)
	ld	bc, (ix + -12)
	jq	BB5_44
BB5_8:
	ld	(ix + -27), iy
	ld	bc, 0
	ld	a, (ix + 6)
	cp	a, 4
	ld	hl, 0
	ex	de, hl
	jq	nc, BB5_25
	ld	a, (ix + 6)
	ld	c, a
	ld	hl, LJTI5_0
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	hl, (hl)
	ld	iy, (ix + -27)
	lea	de, iy + 4
	ld	(ix + -24), de
	lea	bc, iy + 0
	inc	bc
	jp	(hl)
BB5_10:
	ld	(ix + -24), bc
	ld	bc, (iy + 4)
	ld	iy, (ix + 9)
	ld	de, (iy + 4)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	BB5_19
BB5_11:
	ld	de, (iy + 1)
	ld	iy, (ix + 9)
	ld	bc, (iy + 1)
	push	de
	pop	hl
	push	bc
	pop	iy
	or	a, a
	sbc	hl, bc
	call	__setflag
	ld	a, 1
	jq	m, BB5_13
	ld	a, 0
BB5_13:
	ex	de, hl
	lea	de, iy + 0
	or	a, a
	sbc	hl, de
	jq	BB5_14
BB5_15:
	ld	bc, (iy + 1)
	ld	iy, (ix + 9)
	ld	hl, (iy + 1)
	push	hl
	pop	iy
	or	a, a
	sbc	hl, bc
	call	__setflag
	ld	a, 1
	jq	m, BB5_17
	ld	a, 0
BB5_17:
	push	bc
	pop	hl
	lea	bc, iy + 0
	or	a, a
	sbc	hl, bc
BB5_14:
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix + -21), hl
	ld	bc, (ix + -15)
	ld	iy, (ix + -24)
	jq	BB5_22
BB5_18:
	ld	(ix + -24), bc
	ld	bc, (iy + 4)
	ld	iy, (ix + 9)
	ld	de, (iy + 4)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
BB5_19:
	call	__setflag
	ld	a, 1
	jq	m, BB5_21
	ld	a, 0
BB5_21:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix + -21), hl
	ld	iy, (ix + -24)
	ld	bc, (ix + -18)
BB5_22:
	ld	hl, (iy)
	push	bc
	pop	iy
	ld	bc, (iy)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	de, (ix + -21)
	add	hl, de
	bit	0, a
	jq	nz, BB5_24
	or	a, a
	sbc	hl, hl
BB5_24:
	ex	de, hl
BB5_25:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, 1
	ld	(ix + -24), a
	jq	nz, BB5_27
	ld	a, 0
	ld	(ix + -24), a
BB5_27:
	ld	bc, (ix + -12)
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, 1
	ld	iy, (ix + -6)
	jq	nz, BB5_29
	ld	a, 0
BB5_29:
	ld	(ix + -28), a
	and	a, (ix + -24)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	ld	l, 1
	jq	m, BB5_31
	ld	l, 0
BB5_31:
	ld	(ix + -29), l
	push	bc
	pop	hl
	ld	(ix + -21), de
	or	a, a
	sbc	hl, de
	call	__setflag
	ld	l, 1
	jq	p, BB5_33
	ld	l, 0
BB5_33:
	and	a, l
	ld	d, a
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, 1
	jq	z, BB5_35
	ld	a, 0
BB5_35:
	and	a, (ix + -24)
	or	a, d
	bit	0, a
	jq	nz, BB5_37
	ld	hl, (ix + -3)
	ld	(ix + -27), hl
BB5_37:
	ld	hl, (ix + -21)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	l, 1
	jq	z, BB5_39
	ld	l, 0
BB5_39:
	ld	a, (ix + -29)
	or	a, l
	ld	d, a
	ld	hl, (ix + -21)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	l, 1
	jq	z, BB5_41
	ld	l, 0
BB5_41:
	ld	a, (ix + -28)
	or	a, l
	ld	l, a
	ld	a, d
	and	a, l
	bit	0, a
	jq	nz, BB5_43
	ld	bc, (ix + -21)
BB5_43:
	ld	hl, (ix + -27)
	ld	(ix + -3), hl
BB5_44:
	lea	iy, iy + 3
	jq	BB5_4
BB5_45:
	ld	iy, (ix + -3)
BB5_46:
	lea	hl, iy + 0
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI5_0:
	private	LJTI5_0
LJTI5_0:
	dl	BB5_10
	dl	BB5_18
	dl	BB5_11
	dl	BB5_15

	section	.text,"ax",@progbits
	public	_optix_SetCurrentSelection
_optix_SetCurrentSelection:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	iy, (_current_context)
	ld	iy, (iy + 9)
	push	hl
	pop	de
	ld	(iy + 39), hl
	lea	bc, iy + 0
	push	de
	pop	iy
	ld	hl, (iy + 1)
	push	bc
	pop	iy
	ld	(iy + 1), hl
	push	de
	pop	iy
	ld	hl, (iy + 4)
	push	bc
	pop	iy
	ld	(iy + 4), hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L___const.optix_RenderCursor_default.spr
L___const.optix_RenderCursor_default.spr:
	dl	_cursor_normal_data
	dl	_cursor_pointer_data
	dl	_cursor_move_data
	dl	_cursor_resize_horizontal_data
	dl	_cursor_resize_vertical_data
	dl	_cursor_text_data
	dl	_cursor_text_upper_data
	dl	_cursor_text_lower_data
	dl	_cursor_text_math_data

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_cursor_resize_vertical_data
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_malloc
	extern	_kb_AnyKey
	extern	_gfx_SetTransparentColor
	extern	_cursor_pointer_data
	extern	_cursor_text_math_data
	extern	_cursor_resize_horizontal_data
	extern	_gfx_GetSprite
	extern	__sand
	extern	_gfx_GetDraw
	extern	_gfx_SetDraw
	extern	_cursor_text_lower_data
	extern	__setflag
	extern	_cursor_text_upper_data
	extern	_current_context
	extern	__Unwind_SjLj_Unregister
	extern	__ixor
	extern	_gfx_AllocSprite
	extern	__imulu
	extern	_cursor_move_data
	extern	_gfx_SetColor
	extern	_gfx_Rectangle
	extern	_gfx_Sprite
	extern	_cursor_normal_data
	extern	_gfx_TransparentSprite_NoClip
	extern	_cursor_text_data
	extern	__frameset0

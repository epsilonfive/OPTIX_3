	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_test_func
_test_func:
	call	__frameset0
	ld	hl, 7
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 2
	push	hl
	ld	hl, 320
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	ld	(ix + 6), hl
	pop	ix
	jp	_gfx_Blit
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_focus_window
_focus_window:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	(iy + 35), 1
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_minimize_window
_minimize_window:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	(iy + 15), 0
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -557
	call	__frameset
	ld	de, -240
	lea	hl, ix + 0
	add	hl, de
	ld	de, -530
	lea	iy, ix + 0
	add	iy, de
	ld	(iy + 0), hl
	ld	de, -372
	lea	hl, ix + 0
	add	hl, de
	push	ix
	ld	de, -503
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	ld	de, -500
	lea	hl, ix + 0
	add	hl, de
	ld	bc, 0
	lea	de, ix + -118
	ld	(ix + -3), bc
	push	ix
	ld	bc, -509
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	push	ix
	ld	bc, -503
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	lea	de, iy + 110
	ld	bc, -527
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), de
	push	ix
	ld	bc, -503
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	lea	de, iy + 104
	ld	bc, -557
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), de
	push	ix
	ld	bc, -503
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	lea	de, iy + 98
	ld	bc, -554
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), de
	push	ix
	ld	bc, -503
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	lea	de, iy + 92
	ld	bc, -551
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), de
	push	ix
	ld	bc, -503
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	lea	de, iy + 86
	ld	bc, -548
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), de
	push	ix
	ld	bc, -503
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	lea	de, iy + 42
	ld	bc, -524
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), de
	push	ix
	ld	bc, -503
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	lea	de, iy + 27
	ld	bc, -545
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), de
	push	hl
	pop	iy
	lea	de, iy + 119
	ld	bc, -518
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), de
	ld	bc, (ix + -3)
	lea	de, iy + 113
	ld	(ix + -3), bc
	push	ix
	ld	bc, -542
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	lea	de, iy + 85
	push	ix
	ld	bc, -533
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	lea	de, iy + 49
	push	ix
	ld	bc, -521
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	lea	de, iy + 43
	push	ix
	ld	bc, -539
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	lea	de, iy + 12
	push	ix
	ld	bc, -515
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	lea	de, iy + 6
	push	ix
	ld	bc, -536
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	push	ix
	ld	bc, -506
	add	ix, bc
	ld	(ix + 0), iy
	pop	ix
	lea	de, iy + 0
	ld	bc, -512
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), de
	ld	hl, 109
	push	hl
	ld	bc, (ix + -3)
	push	bc
	ld	bc, -509
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, L_.str
	ld	(ix + -93), hl
	ld	hl, L_.str.1
	ld	(ix + -65), hl
	ld	hl, L_.str.2
	ld	(ix + -37), hl
	ld	hl, L_.str.3
	ld	(ix + -9), hl
	ld	hl, 144
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -527
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -509
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -503
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	ld	(iy + 104), hl
	ld	de, 0
	ld	(iy + 107), de
	lea	bc, iy + 0
	ld	(ix + -3), de
	ld	de, -530
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	push	ix
	ld	de, -557
	add	ix, de
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 0), hl
	ld	de, -509
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	lea	hl, iy + 28
	push	bc
	pop	iy
	ld	(iy + 98), hl
	ld	de, (ix + -3)
	ld	(iy + 101), de
	ld	(ix + -3), de
	ld	de, -530
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	push	ix
	ld	de, -554
	add	ix, de
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 36), hl
	ld	de, -509
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	lea	hl, iy + 56
	push	bc
	pop	iy
	ld	(iy + 92), hl
	ld	de, (ix + -3)
	ld	(iy + 95), de
	ld	(ix + -3), de
	ld	de, -530
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	push	ix
	ld	de, -551
	add	ix, de
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 72), hl
	ld	de, -509
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	lea	hl, iy + 84
	push	bc
	pop	iy
	ld	(iy + 86), hl
	ld	de, (ix + -3)
	ld	(iy + 89), de
	ld	bc, -548
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -132
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	de, 112
	ld	bc, -527
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -530
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
BB3_1:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	z, BB3_2
	push	bc
	pop	hl
	push	hl
	pop	de
	ld	bc, -548
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	bc, -509
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	add	iy, de
	or	a, a
	sbc	hl, hl
	push	hl
	push	iy
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 2
	push	hl
	ld	bc, -530
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	ld	bc, -548
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	pop	hl
	pop	hl
	ld	de, 28
	add	iy, de
	lea	bc, iy + 0
	ld	de, 112
	ld	(ix + -3), bc
	ld	bc, -530
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	lea	iy, iy + 36
	push	ix
	add	ix, bc
	ld	(ix + 0), iy
	pop	ix
	ld	bc, (ix + -3)
	jq	BB3_1
BB3_2:
	ld	hl, 22
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -524
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -503
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 100
	ld	(iy + 49), l
	ld	(iy + 50), h
	ld	(iy + 51), 100
	ld	bc, -527
	lea	hl, ix + 0
	add	hl, bc
	ld	de, (hl)
	push	de
	pop	hl
	ld	(iy + 27), hl
	lea	bc, iy + 0
	push	de
	pop	iy
	lea	hl, iy + 36
	push	bc
	pop	iy
	ld	(iy + 30), hl
	push	de
	pop	iy
	lea	hl, iy + 72
	push	bc
	pop	iy
	ld	(iy + 33), hl
	push	de
	pop	iy
	lea	hl, iy + 108
	push	bc
	pop	iy
	ld	(iy + 36), hl
	ld	hl, 0
	ex	de, hl
	ld	(iy + 39), de
	ld	bc, -545
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 64), hl
	ld	(iy + 67), 1
	ld	(iy + 68), de
	ld	(iy + 71), de
	ld.sis	hl, 50
	ld	(iy + 74), l
	ld	(iy + 75), h
	ld	(iy + 76), 50
	or	a, a
	sbc	hl, hl
	ld	(iy + 77), hl
	ld	hl, 2
	ld	(iy + 80), hl
	ld	(iy + 83), hl
	inc	hl
	push	hl
	ld	bc, -524
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -506
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 119), 0
	ld	hl, 100
	ld	(iy + 120), hl
	ld	(iy + 123), hl
	ld	(iy + 126), l
	ld	(iy + 127), h
	ld	bc, -503
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 0), 100
	ld	bc, -518
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	hl, 12
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	pea	iy + 10
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -524
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -506
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 113), hl
	ld	de, 0
	ld	(iy + 116), de
	ld	bc, -542
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -503
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 13), hl
	ld	(iy + 16), 1
	ld	(iy + 17), de
	ld	(iy + 20), de
	ld.sis	hl, 50
	ld	(iy + 23), l
	ld	(iy + 24), h
	ld	(iy + 25), 50
	ld	(iy + 26), 0
	ld	hl, 4
	push	hl
	ld	bc, -518
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 28
	push	hl
	ld	hl, L___const.main.button_text
	push	hl
	ld	bc, -533
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 22
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -521
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 12
	ld	de, -506
	lea	iy, ix + 0
	add	iy, de
	ld	iy, (iy + 0)
	ld	(iy + 56), l
	ld	(iy + 57), h
	ld	(iy + 58), 12
	ld	de, -533
	lea	hl, ix + 0
	add	hl, de
	ld	bc, (hl)
	ld	(iy + 43), bc
	ld	hl, 0
	ld	(iy + 46), hl
	ld	de, -539
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	ld	(iy + 71), hl
	ld	de, 0
	ld	(iy + 74), de
	xor	a, a
	ld	(iy + 77), a
	ld	hl, _minimize_window
	ld	(iy + 78), hl
	ld	(ix + -3), bc
	ld	bc, -518
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 81), hl
	ld	(iy + 84), 0
	push	de
	ld	bc, (ix + -3)
	push	bc
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 2
	push	hl
	ld	bc, -521
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -506
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 59), 2
	ld	hl, 22
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -515
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -506
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -521
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 6), hl
	ld	hl, 0
	ld	(iy + 9), hl
	ld	bc, -536
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 34), hl
	ld	bc, -518
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 37), hl
	ld	hl, L_.str.5
	ld	(iy + 40), hl
	ld	hl, 5
	push	hl
	ld	bc, -515
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -515
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_RecursiveAlign
	pop	hl
	ld	bc, -515
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -506
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld	hl, 0
	ld	(iy + 3), hl
	call	_optix_InitializeColors
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
BB3_4:
	ld	bc, -512
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_UpdateGUI
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	bc, -512
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_RenderGUI
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jq	z, BB3_4
	call	_gfx_End
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"1",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"2",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"3",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"4",000o

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"_",000o

	section	.rodata,"a",@progbits
	private	L___const.main.button_text
L___const.main.button_text:
	db	25 dup 0
	dl	L_.str.4

	section	.rodata,"a",@progbits
	private	L_.str.5
L_.str.5:
	db	"Test",000o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_gfx_Begin
	extern	_memset
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Register
	extern	_gfx_Blit
	extern	__frameset
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_FillRectangle
	extern	_gfx_SetColor
	extern	_optix_UpdateGUI
	extern	_optix_InitializeWidget
	extern	_optix_InitializeColors
	extern	_gfx_End
	extern	_optix_RenderGUI
	extern	__frameset0
	extern	_memcpy
	extern	_optix_RecursiveAlign
	extern	_gfx_SetDraw

	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_test_func
_test_func:
	call	__frameset0
	ld	hl, 7
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 2
	push	hl
	ld	hl, 320
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	ld	(ix + 6), hl
	pop	ix
	jp	_gfx_Blit
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_focus_window
_focus_window:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	(iy + 39), 1
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_minimize_window
_minimize_window:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	(iy + 15), 0
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_toggle_cursor
_toggle_cursor:
	call	__frameset0
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -830
	call	__frameset
	ld	bc, -232
	lea	iy, ix + 0
	add	iy, bc
	ld	bc, -360
	lea	hl, ix + 0
	add	hl, bc
	push	hl
	pop	de
	push	ix
	ld	bc, -758
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	push	ix
	ld	de, -490
	add	ix, de
	lea	bc, ix + 0
	pop	ix
	push	ix
	ld	de, -761
	add	ix, de
	ld	(ix + 0), bc
	pop	ix
	ld	(ix + -3), bc
	push	ix
	ld	bc, -618
	add	ix, bc
	lea	de, ix + 0
	pop	ix
	push	ix
	ld	bc, -749
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	push	ix
	ld	bc, -746
	add	ix, bc
	lea	de, ix + 0
	pop	ix
	push	ix
	ld	bc, -752
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	lea	de, ix + -51
	push	ix
	ld	bc, -809
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	lea	de, ix + -103
	push	ix
	ld	bc, -812
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	lea	de, ix + -105
	push	ix
	ld	bc, -815
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	lea	de, ix + -110
	push	ix
	ld	bc, -818
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	push	ix
	ld	de, -791
	add	ix, de
	ld	(ix + 0), iy
	pop	ix
	lea	hl, iy + 77
	push	ix
	ld	de, -776
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 41
	ld	de, -806
	lea	iy, ix + 0
	add	iy, de
	ld	(iy + 0), hl
	ld	de, -758
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	lea	hl, iy + 98
	push	ix
	ld	de, -755
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 74
	push	ix
	ld	de, -803
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 3
	ld	de, -773
	lea	iy, ix + 0
	add	iy, de
	ld	(iy + 0), hl
	ld	bc, (ix + -3)
	push	bc
	pop	iy
	lea	hl, iy + 100
	push	ix
	ld	bc, -800
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 67
	push	ix
	ld	bc, -797
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 36
	ld	bc, -788
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	bc, -749
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy + 124
	push	ix
	ld	bc, -785
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 112
	push	ix
	ld	bc, -830
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 82
	push	ix
	ld	bc, -764
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 39
	push	ix
	ld	bc, -770
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 1
	ld	bc, -794
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	bc, -752
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy + 89
	push	ix
	ld	bc, -782
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 83
	push	ix
	ld	bc, -827
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 53
	push	ix
	ld	bc, -767
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 52
	push	ix
	ld	bc, -824
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 15
	push	ix
	ld	bc, -779
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 0
	ld	bc, -821
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	bc, -812
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeColors
	pop	hl
	ld	bc, -809
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeCursor
	pop	hl
	ld	bc, -815
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeSettings
	pop	hl
	ld	bc, -818
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeData
	pop	hl
	ld	bc, -815
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -125), hl
	ld	bc, -818
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -122), hl
	ld	bc, -812
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -119), hl
	ld	bc, -809
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -116), hl
	ld	hl, 0
	ld	(ix + -113), hl
	pea	ix + -125
	call	_optix_SetContext
	pop	hl
	call	_optix_InitializeFont
	ld	hl, 30
	push	hl
	ld	hl, L___const.main.test_rectangle
	push	hl
	ld	bc, -776
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 7
	push	hl
	ld	bc, -776
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	ld	hl, L___const.main.test_text
	push	hl
	ld	bc, -806
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 27
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -755
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 50
	push	ix
	ld	bc, -758
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	ld	(iy + 105), l
	ld	(iy + 106), h
	ld	(iy + 107), 48
	ld	bc, -755
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	pop	iy
	ld	bc, -809
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), iy
	ld	hl, 3
	push	hl
	ld	hl, 1
	push	hl
	pea	iy + 27
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 0
	ld	bc, -791
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld	(iy + 3), hl
	ld.sis	hl, 25
	ld	(iy + 6), l
	ld	(iy + 7), h
	ld	(iy + 8), 25
	ld	(iy + 9), 1
	ld	(iy + 10), 1
	ld	hl, 6
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -809
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	pea	iy + 41
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -791
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -806
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 17), hl
	ld	hl, 0
	ld	(iy + 20), hl
	ld	de, 0
	ld	(iy + 23), de
	ld	(iy + 26), de
	ld	hl, 4
	ld	(iy + 29), hl
	ld	hl, 1
	ld	(iy + 32), hl
	ld	(iy + 35), de
	ld	(iy + 38), de
	ld	hl, 3
	push	hl
	ld	bc, -755
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 24
	push	hl
	ld	hl, L___const.main.test_text_b
	push	hl
	ld	bc, -803
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 27
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -773
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 50
	ld	bc, -758
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 10), l
	ld	(iy + 11), h
	ld	(iy + 12), 24
	ld	bc, -773
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	pop	iy
	ld	bc, -806
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), iy
	ld	hl, 3
	push	hl
	ld	hl, 1
	push	hl
	pea	iy + 27
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 0
	ld	bc, -758
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 33), hl
	ld	(iy + 36), hl
	ld.sis	hl, 25
	ld	(iy + 39), l
	ld	(iy + 40), h
	ld	(iy + 41), 25
	ld	(iy + 42), 1
	ld	(iy + 43), 1
	ld	hl, 6
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -806
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	pea	iy + 41
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -758
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -803
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 50), hl
	ld	hl, 0
	ld	(iy + 53), hl
	ld	(iy + 56), hl
	ld	(iy + 59), hl
	ld	de, 2
	ld	(iy + 62), de
	ld	(iy + 65), de
	ld	(iy + 68), hl
	ld	(iy + 71), hl
	ld	hl, 3
	push	hl
	ld	bc, -773
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -758
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 13), 2
	ld	(iy + 14), 0
	ld	hl, 32
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -800
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -755
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -761
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 127), hl
	ld	bc, -758
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 0), 3
	ld	(iy + 2), 1
	ld	hl, 6
	push	hl
	ld	bc, -800
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 33
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -797
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -761
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -755
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 94), hl
	ld	(iy + 97), 1
	ld	hl, 6
	push	hl
	ld	bc, -797
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 27
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -788
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -761
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 8
	ld	(iy + 43), l
	ld	(iy + 44), h
	ld	(iy + 45), 48
	lea	hl, iy + 0
	ld	bc, -791
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	a, (iy + -23)
	push	hl
	pop	iy
	ld	(iy + 48), a
	ld	bc, -755
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 63), hl
	ld	(iy + 66), 1
	ld	hl, 9
	push	hl
	ld	bc, -788
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -749
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 124), 0
	ld	hl, 10
	ld	(iy + 125), hl
	ld	hl, 100
	ld	bc, -761
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld.sis	hl, 200
	ld	(iy + 3), l
	ld	(iy + 4), h
	ld	(iy + 5), 100
	ld	bc, -785
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	hl, 14
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	pea	iy + 10
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -749
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -755
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 112), hl
	ld	bc, -773
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 115), hl
	ld	bc, -788
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 118), hl
	ld	hl, 0
	ld	(iy + 121), hl
	ld	bc, -761
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -830
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 20), hl
	ld	(iy + 23), 1
	ld	hl, 0
	ld	(iy + 24), hl
	ld	(iy + 27), hl
	ld	(iy + 30), l
	ld	(iy + 31), h
	ld.sis	hl, 50
	ld	(iy + 32), l
	ld	(iy + 33), h
	ld	(iy + 34), 50
	ld	(iy + 35), 0
	ld	hl, 4
	push	hl
	ld	bc, -785
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 27
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -764
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -785
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -749
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 109), hl
	ld	hl, 5
	push	hl
	ld	bc, -764
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 27
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -770
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -749
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 80
	ld	(iy + 46), l
	ld	(iy + 47), h
	ld	(iy + 48), 50
	ld	(iy + 66), 1
	ld	(iy + 67), 0
	ld	hl, L_.str.22
	ld	(iy + 68), hl
	ld	hl, 1
	ld	(iy + 71), hl
	dec	hl
	ld	(iy + 74), hl
	ld	(iy + 77), hl
	ld	(iy + 80), 1
	ld	(iy + 81), 0
	push	hl
	ld	bc, -770
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -749
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 50), 1
	ld	(iy + 49), 1
	ld	hl, 38
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -794
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 100
	ld	bc, -749
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 8), l
	ld	(iy + 9), h
	ld	(iy + 10), 12
	ld	(iy + 11), 1
	ld	bc, -770
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 28), hl
	ld	hl, 8
	push	hl
	ld	bc, -794
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -752
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 89), 0
	ld	hl, 150
	ld	(iy + 90), hl
	ld	hl, 120
	ld	(iy + 93), hl
	ld.sis	hl, 100
	ld	(iy + 96), l
	ld	(iy + 97), h
	ld	(iy + 98), 100
	ld	bc, -782
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	hl, 14
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	pea	iy + 10
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -752
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -770
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 83), hl
	ld	hl, 0
	ld	(iy + 86), hl
	ld	bc, -827
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 113), hl
	ld	(iy + 116), 1
	or	a, a
	sbc	hl, hl
	ld	(iy + 117), hl
	ld	(iy + 120), hl
	ld	(iy + 123), l
	ld	(iy + 124), h
	ld.sis	hl, 50
	ld	(iy + 125), l
	ld	(iy + 126), h
	ld	(iy + 127), 50
	ld	bc, -749
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 0), 0
	ld	hl, 4
	push	hl
	ld	bc, -782
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 27
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -767
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -782
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -752
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 80), hl
	ld	hl, 5
	push	hl
	ld	bc, -767
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -752
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 52), 0
	ld	hl, 34
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -779
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 10
	ld	bc, -752
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 22), l
	ld	(iy + 23), h
	ld	(iy + 24), 10
	ld	bc, -824
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 49), hl
	ld	hl, 10
	push	hl
	ld	bc, -779
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -764
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_RecursiveAlign
	pop	hl
	ld	bc, -767
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_RecursiveAlign
	pop	hl
	ld	bc, -776
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -752
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld	bc, -779
	lea	hl, ix + 0
	add	hl, bc
	ld	de, (hl)
	ld	(iy + 3), de
	push	ix
	ld	bc, -767
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 6), hl
	ld	bc, -764
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 9), hl
	ld	hl, 0
	ld	(iy + 12), hl
	push	de
	call	_optix_SetCurrentSelection
	pop	hl
	ld	bc, -821
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -113), hl
BB4_1:
	call	_optix_UpdateGUI
	call	_optix_RenderGUI
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jq	z, BB4_1
	call	_gfx_End
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L___const.main.test_rectangle
L___const.main.test_rectangle:
	db	0
	dl	0
	dl	0
	dw	320
	db	240
	db	4 dup 0
	db	4 dup 0
	dl	0
	dl	0
	dl	0
	db	1
	db	0
	db	0

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"Programs",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"Appvars",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"Files",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"Search",000o

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"Settings",000o

	section	.rodata,"a",@progbits
	private	L_.str.5
L_.str.5:
	db	"Refresh",000o

	section	.rodata,"a",@progbits
	private	L_.str.6
L_.str.6:
	db	"About",000o

	section	.rodata,"a",@progbits
	private	L_.str.7
L_.str.7:
	db	"Exit",000o

	section	.rodata,"a",@progbits
	private	L_.str.8
L_.str.8:
	db	"More",000o

	section	.rodata,"a",@progbits
	private	L_.str.9
L_.str.9:
	db	"Options",000o

	section	.rodata,"a",@progbits
	private	L_.str.10
L_.str.10:
	db	"Please",000o

	section	.rodata,"a",@progbits
	private	L_.str.11
L_.str.11:
	db	"Work",000o

	section	.rodata,"a",@progbits
	private	L___const.main.test_text
L___const.main.test_text:
	dl	L_.str
	dl	L_.str.1
	dl	L_.str.2
	dl	L_.str.3
	dl	L_.str.4
	dl	L_.str.5
	dl	L_.str.6
	dl	L_.str.7
	dl	L_.str.8
	dl	L_.str.9
	dl	L_.str.10
	dl	L_.str.11

	section	.rodata,"a",@progbits
	private	L_.str.12
L_.str.12:
	db	"01",000o

	section	.rodata,"a",@progbits
	private	L_.str.13
L_.str.13:
	db	"02",000o

	section	.rodata,"a",@progbits
	private	L_.str.14
L_.str.14:
	db	"03",000o

	section	.rodata,"a",@progbits
	private	L_.str.15
L_.str.15:
	db	"04",000o

	section	.rodata,"a",@progbits
	private	L_.str.16
L_.str.16:
	db	"05",000o

	section	.rodata,"a",@progbits
	private	L_.str.17
L_.str.17:
	db	"06",000o

	section	.rodata,"a",@progbits
	private	L_.str.18
L_.str.18:
	db	"07",000o

	section	.rodata,"a",@progbits
	private	L_.str.19
L_.str.19:
	db	"08",000o

	section	.rodata,"a",@progbits
	private	L___const.main.test_text_b
L___const.main.test_text_b:
	dl	L_.str.12
	dl	L_.str.13
	dl	L_.str.14
	dl	L_.str.15
	dl	L_.str.16
	dl	L_.str.17
	dl	L_.str.18
	dl	L_.str.19

	section	.rodata,"a",@progbits
	private	L_.str.22
L_.str.22:
	db	"Here is some test text to see if the word wrapping routine works as it should. Hopefully it does. Does this work? Does it now? I'm just going to keep adding more text and hope it doesn't implode.",000o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_memset
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_optix_SetContext
	extern	_gfx_Begin
	extern	_optix_InitializeWidget
	extern	_optix_InitializeCursor
	extern	_optix_SetCurrentSelection
	extern	_optix_InitializeColors
	extern	_optix_InitializeFont
	extern	_memcpy
	extern	_optix_RecursiveAlign
	extern	_gfx_SetDraw
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_Blit
	extern	_gfx_FillRectangle
	extern	_gfx_SetColor
	extern	_optix_UpdateGUI
	extern	_optix_InitializeData
	extern	_optix_RenderGUI
	extern	_gfx_End
	extern	__frameset0
	extern	_optix_InitializeSettings

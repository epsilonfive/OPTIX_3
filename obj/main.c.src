	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_test_func
_test_func:
	call	__frameset0
	ld	hl, 7
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 2
	push	hl
	ld	hl, 320
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	ld	(ix + 6), hl
	pop	ix
	jp	_gfx_Blit
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_focus_window
_focus_window:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	(iy + 42), 1
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_minimize_window
_minimize_window:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	(iy + 15), 0
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_toggle_cursor
_toggle_cursor:
	call	__frameset0
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -943
	call	__frameset
	ld	bc, -169
	lea	hl, ix + 0
	add	hl, bc
	ld	bc, -901
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	bc, -324
	lea	hl, ix + 0
	add	hl, bc
	push	hl
	pop	de
	push	ix
	ld	bc, -868
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	ld	bc, -453
	lea	hl, ix + 0
	add	hl, bc
	push	ix
	ld	bc, -859
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	ld	(ix + -3), de
	ld	de, -582
	lea	hl, ix + 0
	add	hl, de
	push	hl
	pop	bc
	push	ix
	ld	de, -865
	add	ix, de
	ld	(ix + 0), bc
	pop	ix
	ld	de, -710
	lea	hl, ix + 0
	add	hl, de
	push	ix
	ld	de, -862
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	ld	de, -850
	lea	hl, ix + 0
	add	hl, de
	push	ix
	ld	de, -853
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, ix + -62
	push	ix
	ld	de, -919
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, ix + -114
	push	ix
	ld	de, -922
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, ix + -116
	push	ix
	ld	de, -928
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, ix + -121
	push	ix
	ld	de, -925
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	ld	de, -901
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	lea	hl, iy + 0
	ld	de, -889
	lea	iy, ix + 0
	add	iy, de
	ld	(iy + 0), hl
	ld	de, (ix + -3)
	push	de
	pop	iy
	lea	hl, iy + 119
	push	ix
	ld	de, -916
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 45
	push	ix
	ld	de, -856
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 21
	ld	de, -913
	lea	iy, ix + 0
	add	iy, de
	ld	(iy + 0), hl
	ld	de, -859
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	lea	hl, iy + 76
	push	ix
	ld	de, -886
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 40
	push	ix
	ld	de, -910
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 4
	ld	de, -907
	lea	iy, ix + 0
	add	iy, de
	ld	(iy + 0), hl
	push	bc
	pop	iy
	lea	hl, iy + 99
	push	ix
	ld	bc, -898
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 56
	push	ix
	ld	bc, -880
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 44
	push	ix
	ld	bc, -943
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 11
	ld	bc, -874
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	bc, -862
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy + 93
	push	ix
	ld	bc, -883
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 52
	push	ix
	ld	bc, -904
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 9
	push	ix
	ld	bc, -877
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 3
	ld	bc, -940
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	bc, -853
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy + 110
	push	ix
	ld	bc, -871
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 109
	push	ix
	ld	bc, -937
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 69
	push	ix
	ld	bc, -892
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 66
	push	ix
	ld	bc, -934
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 24
	push	ix
	ld	bc, -895
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 0
	ld	bc, -931
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	bc, -922
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeColors
	pop	hl
	ld	bc, -919
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeCursor
	pop	hl
	ld	bc, -928
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeSettings
	pop	hl
	ld	bc, -925
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeData
	pop	hl
	ld	bc, -901
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -928
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 33), hl
	ld	bc, -925
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	ld	bc, -922
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -130
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	ld	bc, -919
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -127), hl
	ld	hl, 0
	ld	(ix + -124), hl
	pea	iy + 33
	call	_optix_SetContext
	pop	hl
	call	_optix_InitializeFont
	ld	hl, 33
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -889
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 7
	ld	bc, -901
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld.sis	de, 320
	ld	(iy + 7), e
	ld	(iy + 8), d
	ld	(iy + 9), -16
	ld	(iy + 30), 1
	push	hl
	ld	bc, -889
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	ld	hl, L___const.main.test_text
	push	hl
	ld	bc, -916
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -856
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 50
	ld	bc, -868
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 52), l
	ld	(iy + 53), h
	ld	(iy + 54), 48
	ld	bc, -856
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	pop	iy
	ld	bc, -901
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), iy
	ld	hl, 3
	push	hl
	ld	hl, 1
	push	hl
	pea	iy + 30
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 0
	ld	bc, -868
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 78), hl
	ld	(iy + 81), hl
	ld.sis	hl, 25
	ld	(iy + 84), l
	ld	(iy + 85), h
	ld	(iy + 86), 25
	ld	(iy + 87), 1
	ld	(iy + 88), 1
	ld	hl, 6
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -901
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	pea	iy + 44
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -868
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -916
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 95), hl
	ld	hl, 0
	ld	(iy + 98), hl
	ld	de, 0
	ld	(iy + 101), de
	ld	(iy + 104), de
	ld	hl, 4
	ld	(iy + 107), hl
	ld	hl, 1
	ld	(iy + 110), hl
	ld	(iy + 113), de
	ld	(iy + 116), de
	ld	hl, 3
	push	hl
	ld	bc, -856
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 24
	push	hl
	ld	hl, L___const.main.test_text_b
	push	hl
	ld	bc, -913
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -886
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 50
	ld	bc, -859
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 83), l
	ld	(iy + 84), h
	ld	(iy + 85), 24
	ld	bc, -886
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	pop	iy
	ld	bc, -901
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), iy
	ld	hl, 3
	push	hl
	ld	hl, 1
	push	hl
	pea	iy + 30
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 0
	ld	bc, -859
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 109), hl
	ld	(iy + 112), hl
	ld.sis	hl, 25
	ld	(iy + 115), l
	ld	(iy + 116), h
	ld	(iy + 117), 25
	ld	(iy + 118), 1
	ld	(iy + 119), 1
	ld	hl, 6
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -901
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	pea	iy + 44
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -913
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -859
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 126), hl
	ld	hl, 0
	ld	bc, -868
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld	(iy + 3), hl
	ld	(iy + 6), hl
	ld	de, 2
	ld	(iy + 9), de
	ld	(iy + 12), de
	ld	(iy + 15), hl
	ld	(iy + 18), hl
	ld	hl, 3
	push	hl
	ld	bc, -886
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -868
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + -43), 2
	ld	(iy + -42), 0
	ld	hl, 35
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -910
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -856
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -859
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 70), hl
	ld	(iy + 73), 3
	ld	(iy + 75), 1
	ld	hl, 6
	push	hl
	ld	bc, -910
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -907
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -856
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -859
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 34), hl
	ld	(iy + 37), 1
	ld	hl, 6
	push	hl
	ld	bc, -907
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -898
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -865
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 8
	ld	(iy + 106), l
	ld	(iy + 107), h
	ld	(iy + 108), 48
	lea	hl, iy + 0
	ld	bc, -868
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	a, (iy + 52)
	push	hl
	pop	iy
	ld	(iy + 111), a
	ld	bc, -856
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -859
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld	(iy + 3), 1
	ld	hl, 9
	push	hl
	ld	bc, -898
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -865
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 56), 0
	ld	hl, 10
	ld	(iy + 57), hl
	ld	hl, 100
	ld	(iy + 60), hl
	ld.sis	hl, 200
	ld	(iy + 63), l
	ld	(iy + 64), h
	ld	(iy + 65), 100
	ld	bc, -880
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	hl, 17
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	pea	iy + 10
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -865
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -856
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 44), hl
	ld	bc, -886
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 47), hl
	ld	bc, -898
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 50), hl
	ld	hl, 0
	ld	(iy + 53), hl
	ld	bc, -943
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 83), hl
	ld	(iy + 86), 1
	ld	hl, 0
	ld	(iy + 87), hl
	ld	(iy + 90), hl
	ld	(iy + 93), l
	ld	(iy + 94), h
	ld.sis	hl, 50
	ld	(iy + 95), l
	ld	(iy + 96), h
	ld	(iy + 97), 50
	ld	(iy + 98), 0
	ld	hl, 4
	push	hl
	ld	bc, -880
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -874
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -880
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -865
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 41), hl
	ld	hl, 5
	push	hl
	ld	bc, -874
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 46
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -883
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -862
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 80
	ld	(iy + 100), l
	ld	(iy + 101), h
	ld	(iy + 102), 50
	ld	(iy + 123), 1
	ld	hl, L_.str.22
	ld	(iy + 125), hl
	ld	hl, 1
	ld	bc, -865
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld	(iy + 9), 1
	dec	hl
	push	hl
	ld	bc, -883
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -865
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + -24), 1
	ld	(iy + -25), 1
	ld	hl, 41
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -904
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -862
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 100
	ld	(iy + 59), l
	ld	(iy + 60), h
	ld	(iy + 61), 12
	ld	(iy + 62), 1
	ld	bc, -883
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 82), hl
	ld	hl, 8
	push	hl
	ld	bc, -904
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -862
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 9), 0
	ld	hl, 1
	ld	(iy + 10), hl
	ld	hl, 40
	ld	(iy + 13), hl
	ld.sis	hl, 100
	ld	(iy + 16), l
	ld	(iy + 17), h
	ld	(iy + 18), 100
	ld	bc, -877
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	hl, 17
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	pea	iy + 10
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -862
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -883
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 3), hl
	ld	hl, 0
	ld	(iy + 6), hl
	ld	bc, -940
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 36), hl
	ld	(iy + 39), 1
	or	a, a
	sbc	hl, hl
	ld	(iy + 40), hl
	ld	(iy + 43), hl
	ld	(iy + 46), l
	ld	(iy + 47), h
	ld.sis	hl, 50
	ld	(iy + 48), l
	ld	(iy + 49), h
	ld	(iy + 50), 50
	ld	(iy + 51), 0
	ld	hl, 4
	push	hl
	ld	bc, -877
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -871
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -877
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -862
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld	hl, 5
	push	hl
	ld	bc, -871
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -853
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 109), 0
	ld	hl, 37
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -892
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -853
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 10
	ld	(iy + 76), l
	ld	(iy + 77), h
	ld	(iy + 78), 10
	ld	bc, -937
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 106), hl
	ld	hl, 10
	push	hl
	ld	bc, -892
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	de, 0
	ld	bc, -853
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 66), de
	ld	hl, 30
	push	hl
	push	de
	ld	bc, -895
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -853
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	hl, 30
	ld	(iy + 28), hl
	ld.sis	hl, 50
	ld	(iy + 31), l
	ld	(iy + 32), h
	ld	(iy + 33), 8
	or	a, a
	sbc	hl, hl
	ld	(iy + 54), hl
	ld	hl, 10
	ld	(iy + 57), hl
	ld	bc, -934
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 60), hl
	ld	(iy + 63), 0
	ld.sis	hl, 0
	ld	(iy + 64), l
	ld	(iy + 65), h
	ld	hl, 11
	push	hl
	ld	bc, -895
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -874
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_RecursiveAlign
	pop	hl
	ld	bc, -871
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_RecursiveAlign
	pop	hl
	ld	bc, -871
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -853
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	pea	iy + 21
	call	_optix_CopyElement
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	ld	hl, 50
	push	hl
	ld	bc, -880
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_SetPosition
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 60
	push	hl
	ld	hl, 120
	push	hl
	ld	bc, -877
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_SetPosition
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (_current_context)
	ld	hl, (iy + 3)
	ld	(hl), 1
	ld	bc, -889
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -853
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld	bc, -892
	lea	hl, ix + 0
	add	hl, bc
	ld	de, (hl)
	ld	(iy + 3), de
	push	ix
	ld	bc, -895
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 6), hl
	ld	hl, (iy + 21)
	ld	(iy + 9), hl
	ld	bc, -871
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 12), hl
	ld	bc, -874
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 15), hl
	ld	hl, 0
	ld	(iy + 18), hl
	push	de
	call	_optix_SetCurrentSelection
	pop	hl
	ld	bc, -931
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -124), hl
BB4_1:
	call	_optix_UpdateGUI
	call	_optix_RenderGUI
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jq	z, BB4_1
	call	_gfx_End
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"Programs",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"Appvars",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"Files",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"Search",000o

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"Settings",000o

	section	.rodata,"a",@progbits
	private	L_.str.5
L_.str.5:
	db	"Refresh",000o

	section	.rodata,"a",@progbits
	private	L_.str.6
L_.str.6:
	db	"About",000o

	section	.rodata,"a",@progbits
	private	L_.str.7
L_.str.7:
	db	"Exit",000o

	section	.rodata,"a",@progbits
	private	L_.str.8
L_.str.8:
	db	"More",000o

	section	.rodata,"a",@progbits
	private	L_.str.9
L_.str.9:
	db	"Options",000o

	section	.rodata,"a",@progbits
	private	L_.str.10
L_.str.10:
	db	"Please",000o

	section	.rodata,"a",@progbits
	private	L_.str.11
L_.str.11:
	db	"Work",000o

	section	.rodata,"a",@progbits
	private	L___const.main.test_text
L___const.main.test_text:
	dl	L_.str
	dl	L_.str.1
	dl	L_.str.2
	dl	L_.str.3
	dl	L_.str.4
	dl	L_.str.5
	dl	L_.str.6
	dl	L_.str.7
	dl	L_.str.8
	dl	L_.str.9
	dl	L_.str.10
	dl	L_.str.11

	section	.rodata,"a",@progbits
	private	L_.str.12
L_.str.12:
	db	"01",000o

	section	.rodata,"a",@progbits
	private	L_.str.13
L_.str.13:
	db	"02",000o

	section	.rodata,"a",@progbits
	private	L_.str.14
L_.str.14:
	db	"03",000o

	section	.rodata,"a",@progbits
	private	L_.str.15
L_.str.15:
	db	"04",000o

	section	.rodata,"a",@progbits
	private	L_.str.16
L_.str.16:
	db	"05",000o

	section	.rodata,"a",@progbits
	private	L_.str.17
L_.str.17:
	db	"06",000o

	section	.rodata,"a",@progbits
	private	L_.str.18
L_.str.18:
	db	"07",000o

	section	.rodata,"a",@progbits
	private	L_.str.19
L_.str.19:
	db	"08",000o

	section	.rodata,"a",@progbits
	private	L___const.main.test_text_b
L___const.main.test_text_b:
	dl	L_.str.12
	dl	L_.str.13
	dl	L_.str.14
	dl	L_.str.15
	dl	L_.str.16
	dl	L_.str.17
	dl	L_.str.18
	dl	L_.str.19

	section	.rodata,"a",@progbits
	private	L_.str.22
L_.str.22:
	db	"Here is some test text to see if the word wrapping routine works as it should. Hopefully it does. Does this work? Does it now? I'm just going to keep adding more text and hope it doesn't implode.",000o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_memset
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_optix_SetContext
	extern	_gfx_Begin
	extern	_optix_InitializeWidget
	extern	_optix_SetPosition
	extern	_optix_InitializeCursor
	extern	_optix_SetCurrentSelection
	extern	_optix_InitializeColors
	extern	_optix_InitializeFont
	extern	_memcpy
	extern	_optix_RecursiveAlign
	extern	_gfx_SetDraw
	extern	_current_context
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_Blit
	extern	_optix_CopyElement
	extern	_gfx_FillRectangle
	extern	_gfx_SetColor
	extern	_optix_UpdateGUI
	extern	_optix_InitializeData
	extern	_optix_RenderGUI
	extern	_gfx_End
	extern	__frameset0
	extern	_optix_InitializeSettings

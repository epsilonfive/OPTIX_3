	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_test_func
_test_func:
	call	__frameset0
	ld	hl, 7
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 2
	push	hl
	ld	hl, 320
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	ld	(ix + 6), hl
	pop	ix
	jp	_gfx_Blit
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_focus_window
_focus_window:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	(iy + 42), 1
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_minimize_window
_minimize_window:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	(iy + 15), 0
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_toggle_cursor
_toggle_cursor:
	call	__frameset0
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -1959
	call	__frameset
	ld	bc, -139
	lea	hl, ix + 0
	add	hl, bc
	ld	bc, -1938
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	bc, -279
	lea	iy, ix + 0
	add	iy, bc
	ld	bc, -1881
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), iy
	ld	bc, -419
	lea	hl, ix + 0
	add	hl, bc
	push	ix
	ld	bc, -1875
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	ld	bc, -571
	lea	hl, ix + 0
	add	hl, bc
	push	hl
	pop	de
	push	ix
	ld	bc, -1896
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	ld	(ix + -3), de
	push	ix
	ld	de, -1587
	add	ix, de
	lea	bc, ix + 0
	pop	ix
	push	ix
	ld	de, -1917
	add	ix, de
	ld	(ix + 0), bc
	pop	ix
	ld	de, -1726
	lea	hl, ix + 0
	add	hl, de
	push	ix
	ld	de, -1872
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	ld	de, -1863
	lea	hl, ix + 0
	add	hl, de
	push	ix
	ld	de, -1869
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, ix + -62
	push	ix
	ld	de, -1941
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, ix + -114
	push	ix
	ld	de, -1944
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, ix + -116
	push	ix
	ld	de, -1908
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, ix + -121
	push	ix
	ld	de, -1947
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 110
	push	ix
	ld	de, -1899
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 74
	push	ix
	ld	de, -1935
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 0
	ld	de, -1866
	lea	iy, ix + 0
	add	iy, de
	ld	(iy + 0), hl
	ld	de, -1875
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	lea	hl, iy + 116
	push	ix
	ld	de, -1932
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 42
	push	ix
	ld	de, -1893
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	ld	de, (ix + -3)
	lea	hl, iy + 6
	ld	(ix + -3), bc
	ld	bc, -1929
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	push	de
	pop	iy
	lea	hl, iy + 122
	push	ix
	ld	de, -1926
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 88
	push	ix
	ld	de, -1920
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 45
	push	ix
	ld	de, -1887
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 33
	push	ix
	ld	de, -1959
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 0
	ld	de, -1884
	lea	iy, ix + 0
	add	iy, de
	ld	(iy + 0), hl
	ld	bc, (ix + -3)
	push	bc
	pop	iy
	lea	hl, iy + 16
	ld	bc, -1923
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	bc, -1872
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy + 109
	push	ix
	ld	bc, -1914
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 52
	push	ix
	ld	bc, -1911
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 9
	push	ix
	ld	bc, -1890
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 3
	ld	bc, -1956
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	bc, -1869
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy + 107
	push	ix
	ld	bc, -1878
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 66
	push	ix
	ld	bc, -1902
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 63
	push	ix
	ld	bc, -1953
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 21
	push	ix
	ld	bc, -1905
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 0
	ld	bc, -1950
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	bc, -1944
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeColors
	pop	hl
	ld	bc, -1941
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeCursor
	pop	hl
	ld	bc, -1908
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeSettings
	pop	hl
	ld	bc, -1947
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeData
	pop	hl
	ld	bc, -1908
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -1938
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	ld	(iy + 3), hl
	ld	bc, -1947
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	ld	bc, -1944
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -130
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	ld	bc, -1941
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -127), hl
	ld	hl, 0
	ld	(ix + -124), hl
	pea	iy + 3
	call	_optix_SetContext
	pop	hl
	call	_optix_InitializeFont
	ld	hl, 33
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -1899
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 7
	ld	bc, -1881
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld.sis	de, 320
	ld	(iy + 117), e
	ld	(iy + 118), d
	ld	(iy + 119), -16
	ld	bc, -1938
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), 1
	push	hl
	ld	bc, -1899
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	ld	hl, L___const.main.test_text
	push	hl
	ld	bc, -1935
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -1866
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 50
	ld	bc, -1881
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 7), l
	ld	(iy + 8), h
	ld	(iy + 9), 48
	ld	bc, -1866
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	pop	iy
	ld	bc, -1938
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), iy
	ld	hl, 3
	push	hl
	ld	hl, 1
	push	hl
	pea	iy + 30
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 0
	ld	bc, -1881
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 33), hl
	ld	(iy + 36), hl
	ld.sis	hl, 25
	ld	(iy + 39), l
	ld	(iy + 40), h
	ld	(iy + 41), 25
	ld	(iy + 42), 1
	ld	(iy + 43), 1
	ld	hl, 6
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -1938
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	pea	iy + 44
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1881
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -1935
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 50), hl
	ld	hl, 0
	ld	(iy + 53), hl
	ld	de, 0
	ld	(iy + 56), de
	ld	(iy + 59), de
	ld	hl, 4
	ld	(iy + 62), hl
	ld	hl, 1
	ld	(iy + 65), hl
	ld	(iy + 68), de
	ld	(iy + 71), de
	ld	hl, 3
	push	hl
	ld	bc, -1866
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 24
	push	hl
	ld	hl, L___const.main.test_text_b
	push	hl
	ld	bc, -1932
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -1893
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 50
	ld	bc, -1875
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 49), l
	ld	(iy + 50), h
	ld	(iy + 51), 24
	ld	bc, -1893
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	hl, 3
	push	hl
	ld	hl, 1
	push	hl
	pea	iy + 30
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 0
	ld	bc, -1875
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 75), hl
	ld	(iy + 78), hl
	ex	de, hl
	ld.sis	hl, 25
	ld	(iy + 81), l
	ld	(iy + 82), h
	ld	(iy + 83), 25
	ld	(iy + 84), 1
	ld	(iy + 85), 0
	ld	(iy + 86), 4
	ld	(iy + 87), 0
	ld	hl, 0
	ld	(iy + 88), hl
	ld	a, 0
	ld	(iy + 91), a
	ld	(ix + -3), de
	push	ix
	ld	de, -1932
	add	ix, de
	ld	bc, (ix + 0)
	pop	ix
	ld	(iy + 92), bc
	ld	de, (ix + -3)
	ld	(iy + 95), de
	ld	(iy + 98), hl
	ld	(iy + 101), hl
	ld	de, 2
	ld	(iy + 104), de
	ld	(iy + 107), de
	ld	(iy + 110), hl
	ld	(iy + 113), hl
	ld	hl, 3
	push	hl
	ld	bc, -1893
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -1875
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 52), 2
	ld	(iy + 53), 0
	ld	hl, 35
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -1929
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1866
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -1875
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 36), hl
	ld	(iy + 39), 3
	ld	(iy + 41), 1
	ld	hl, 6
	push	hl
	ld	bc, -1929
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -1926
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1866
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -1875
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld	(iy + 3), 1
	ld	hl, 6
	push	hl
	ld	bc, -1926
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -1920
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1896
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 8
	ld	(iy + 95), l
	ld	(iy + 96), h
	ld	(iy + 97), 48
	lea	hl, iy + 0
	ld	bc, -1881
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	a, (iy + 7)
	push	hl
	pop	iy
	ld	(iy + 100), a
	ld	bc, -1866
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 118), hl
	ld	(iy + 121), 1
	ld	hl, 9
	push	hl
	ld	bc, -1920
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -1896
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 45), 0
	ld	hl, 10
	ld	(iy + 46), hl
	ld	hl, 100
	ld	(iy + 49), hl
	ld.sis	hl, 200
	ld	(iy + 52), l
	ld	(iy + 53), h
	ld	(iy + 54), 100
	ld	bc, -1887
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	hl, 17
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	pea	iy + 10
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1896
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -1866
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 33), hl
	ld	bc, -1893
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 36), hl
	ld	bc, -1920
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 39), hl
	ld	hl, 0
	ld	(iy + 42), hl
	ld	bc, -1959
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 72), hl
	ld	(iy + 75), 1
	ld	hl, 0
	ld	(iy + 76), hl
	ld	(iy + 79), hl
	ld	(iy + 82), l
	ld	(iy + 83), h
	ld.sis	hl, 50
	ld	(iy + 84), l
	ld	(iy + 85), h
	ld	(iy + 86), 50
	ld	(iy + 87), 0
	ld	hl, 4
	push	hl
	ld	bc, -1887
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -1884
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1887
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -1896
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 30), hl
	ld	hl, 5
	push	hl
	ld	bc, -1884
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -1923
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	hl, 998
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	pea	iy + 2
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1917
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 16), 78
	ld	(iy + 17), 79
	ld	hl, 46
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -1914
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1872
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 80
	ld	(iy + 116), l
	ld	(iy + 117), h
	ld	(iy + 118), 50
	ld	bc, -1917
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 0), 1
	ld	hl, L_.str.22
	ld	(iy + 2), hl
	ld	hl, 1
	ld	(iy + 5), hl
	ld	(iy + 14), 1
	dec	hl
	push	hl
	ld	bc, -1914
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -1917
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + -19), 1
	ld	(iy + -20), 1
	ld	bc, -1911
	lea	iy, ix + 0
	add	iy, bc
	ld	hl, (iy + 0)
	inc	hl
	ld	de, 56
	push	de
	ld	de, 0
	push	de
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1914
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	a, l
	ld	bc, -1872
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 52), a
	ld.sis	hl, 80
	ld	(iy + 59), l
	ld	(iy + 60), h
	ld	(iy + 61), 60
	ld	(iy + 62), 1
	ld	(iy + 82), 1
	ld	bc, -1923
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 84), hl
	ld	(iy + 96), 1
	ld	(iy + 97), 1
	ld	hl, 8
	push	hl
	ld	bc, -1911
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -1872
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 9), 0
	ld	hl, 1
	ld	(iy + 10), hl
	ld	hl, 40
	ld	(iy + 13), hl
	ld.sis	hl, 100
	ld	(iy + 16), l
	ld	(iy + 17), h
	ld	(iy + 18), 100
	ld	bc, -1890
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	hl, 17
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	pea	iy + 10
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1872
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -1911
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 3), hl
	ld	hl, 0
	ld	(iy + 6), hl
	ld	bc, -1956
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 36), hl
	ld	(iy + 39), 1
	or	a, a
	sbc	hl, hl
	ld	(iy + 40), hl
	ld	(iy + 43), hl
	ld	(iy + 46), l
	ld	(iy + 47), h
	ld.sis	hl, 50
	ld	(iy + 48), l
	ld	(iy + 49), h
	ld	(iy + 50), 50
	ld	(iy + 51), 0
	ld	hl, 4
	push	hl
	ld	bc, -1890
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -1878
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1890
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -1872
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld	hl, 5
	push	hl
	ld	bc, -1878
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, 38
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -1902
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1869
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 10
	ld	(iy + 73), l
	ld	(iy + 74), h
	ld	(iy + 75), 10
	ld	bc, -1908
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 104), hl
	ld	hl, 10
	push	hl
	ld	bc, -1902
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	de, 0
	ld	bc, -1869
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 63), de
	ld	hl, 30
	push	hl
	push	de
	ld	bc, -1905
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1869
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	ld	hl, 30
	ld	(iy + 25), hl
	ld.sis	hl, 50
	ld	(iy + 28), l
	ld	(iy + 29), h
	ld	(iy + 30), 8
	or	a, a
	sbc	hl, hl
	ld	(iy + 51), hl
	ld	hl, 10
	ld	(iy + 54), hl
	ld	bc, -1953
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 57), hl
	ld	(iy + 60), 0
	ld.sis	hl, 0
	ld	(iy + 61), l
	ld	(iy + 62), h
	ld	hl, 11
	push	hl
	ld	bc, -1905
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	bc, -1884
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_RecursiveAlign
	pop	hl
	ld	bc, -1878
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_RecursiveAlign
	pop	hl
	ld	bc, -1878
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -1869
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	pea	iy + 18
	call	_optix_CopyElement
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	ld	hl, 50
	push	hl
	ld	bc, -1887
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_SetPosition
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 60
	push	hl
	ld	hl, 120
	push	hl
	ld	bc, -1890
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_SetPosition
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (_current_context)
	ld	hl, (iy + 3)
	ld	(hl), 1
	ld	bc, -1899
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -1869
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld	bc, -1902
	lea	hl, ix + 0
	add	hl, bc
	ld	de, (hl)
	ld	(iy + 3), de
	push	ix
	ld	bc, -1905
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy + 6), hl
	ld	bc, -1878
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 9), hl
	ld	bc, -1884
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 12), hl
	ld	hl, 0
	ld	(iy + 15), hl
	ld	a, (ix + -116)
	ld	bc, -1866
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), a
	ld	(ix + -116), 0
	push	de
	call	_optix_SetCurrentSelection
	pop	hl
	ld	bc, -1866
	lea	hl, ix + 0
	add	hl, bc
	ld	a, (hl)
	ld	(ix + -116), a
	ld	bc, -1950
	lea	iy, ix + 0
	add	iy, bc
	ld	hl, (iy + 0)
	ld	(ix + -124), hl
BB4_1:
	call	_optix_UpdateGUI
	call	_optix_RenderGUI
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jq	z, BB4_1
	call	_gfx_End
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"Programs",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"Appvars",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"Files",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"Search",000o

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"Settings",000o

	section	.rodata,"a",@progbits
	private	L_.str.5
L_.str.5:
	db	"Refresh",000o

	section	.rodata,"a",@progbits
	private	L_.str.6
L_.str.6:
	db	"About",000o

	section	.rodata,"a",@progbits
	private	L_.str.7
L_.str.7:
	db	"Exit",000o

	section	.rodata,"a",@progbits
	private	L_.str.8
L_.str.8:
	db	"More",000o

	section	.rodata,"a",@progbits
	private	L_.str.9
L_.str.9:
	db	"Options",000o

	section	.rodata,"a",@progbits
	private	L_.str.10
L_.str.10:
	db	"Please",000o

	section	.rodata,"a",@progbits
	private	L_.str.11
L_.str.11:
	db	"Work",000o

	section	.rodata,"a",@progbits
	private	L___const.main.test_text
L___const.main.test_text:
	dl	L_.str
	dl	L_.str.1
	dl	L_.str.2
	dl	L_.str.3
	dl	L_.str.4
	dl	L_.str.5
	dl	L_.str.6
	dl	L_.str.7
	dl	L_.str.8
	dl	L_.str.9
	dl	L_.str.10
	dl	L_.str.11

	section	.rodata,"a",@progbits
	private	L_.str.12
L_.str.12:
	db	"01",000o

	section	.rodata,"a",@progbits
	private	L_.str.13
L_.str.13:
	db	"02",000o

	section	.rodata,"a",@progbits
	private	L_.str.14
L_.str.14:
	db	"03",000o

	section	.rodata,"a",@progbits
	private	L_.str.15
L_.str.15:
	db	"04",000o

	section	.rodata,"a",@progbits
	private	L_.str.16
L_.str.16:
	db	"05",000o

	section	.rodata,"a",@progbits
	private	L_.str.17
L_.str.17:
	db	"06",000o

	section	.rodata,"a",@progbits
	private	L_.str.18
L_.str.18:
	db	"07",000o

	section	.rodata,"a",@progbits
	private	L_.str.19
L_.str.19:
	db	"08",000o

	section	.rodata,"a",@progbits
	private	L___const.main.test_text_b
L___const.main.test_text_b:
	dl	L_.str.12
	dl	L_.str.13
	dl	L_.str.14
	dl	L_.str.15
	dl	L_.str.16
	dl	L_.str.17
	dl	L_.str.18
	dl	L_.str.19

	section	.rodata,"a",@progbits
	private	L_.str.22
L_.str.22:
	db	"Here is some test text to see if the word wrapping routine works as it should. Hopefully it does. Does this work? Does it now? I'm just going to keep adding more text and hope it doesn't implode.",000o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_memset
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_optix_SetContext
	extern	_gfx_Begin
	extern	_optix_InitializeWidget
	extern	_optix_SetPosition
	extern	_optix_InitializeCursor
	extern	_optix_SetCurrentSelection
	extern	_optix_InitializeColors
	extern	_optix_InitializeFont
	extern	_memcpy
	extern	_optix_RecursiveAlign
	extern	_gfx_SetDraw
	extern	_current_context
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_Blit
	extern	_optix_CopyElement
	extern	_gfx_FillRectangle
	extern	_gfx_SetColor
	extern	_optix_UpdateGUI
	extern	_optix_InitializeData
	extern	_optix_RenderGUI
	extern	_gfx_End
	extern	__frameset0
	extern	_optix_InitializeSettings
